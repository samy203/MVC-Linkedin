@model FeedsViewModel

@{
    AjaxOptions ajaxopts = new AjaxOptions()
    {
        HttpMethod = "POST",
        UpdateTargetId = "commentz",
        InsertionMode = InsertionMode.Replace
    };
}

<div class="LC-tab">
    <button class="fa fa-thumbs-up like-btn" onclick=""> Like</button>
    <button class="fa fa-commenting like-btn combtn"> Comment</button>
</div>


<div class="comments" id="commentz_@Model.CurrentPost.Id">

    <div class="user-comment">
        <img class="comment-img" src="~/Resource/pic.png" alt="" width="35px" height="35px">
        <input type="text" class="user-text-comment form-control" name="txtBox1" id="txtBox_@Model.CurrentPost.Id">
        <input type="submit" class="form-control comment-submit" value="Comment" id="cmnt_@Model.CurrentPost.Id" onclick="addComment({CurrentPostID:'@Model.CurrentPost.Id',ID:'@Model.ID'}); signalrAnnounceComment('@Model.CurrentPost.Id','@Model.CurrentPost.Fk_ApplicationUserID','@Model.ID','@DateTime.Now.ToString()');">
    </div>


    <div id="commentref_@Model.CurrentPost.Id">
        @{
            if (Model.CurrentPost.Comments != null)
            {
                foreach (var comment in Model.CurrentPost.Comments)
                { 
                    <div class="other-comment">
                        <img class="comment-img" src="~/Resource/pic.png" alt="" width="35px" height="35px">
                        <div class="comment-posting-data">
                            @{
                                string s = comment.ApplicationUser.FirstName + " " + comment.ApplicationUser.LastName;
                            }
                            <span class="font-14">@Html.ActionLink(s, "DisplayUser", "Person", new { RequiredUserID = comment.ApplicationUser.Id, ID = Model.ID }, new { style = "color:Black" })</span><br>
                            <span class="font-12">
                                @{
                                    if (Math.Abs((comment.Date - DateTime.Now).Value.TotalMilliseconds) < 1000)
                                    {
                                        <span>Just now</span>
                                    }
                                    else if (Math.Abs((comment.Date - DateTime.Now).Value.TotalSeconds) < 60)
                                    {
                                        @(Math.Abs((comment.Date - DateTime.Now).Value.Seconds)) <span>seconds ago</span>
                                    }
                                    else if (Math.Abs((comment.Date - DateTime.Now).Value.TotalMinutes) < 60)
                                    {
                                        @(Math.Abs((comment.Date - DateTime.Now).Value.Minutes)) <span>mins ago</span>
                                    }
                                    else if (Math.Abs((comment.Date - DateTime.Now).Value.TotalHours) < 24)
                                    {
                                        @(Math.Abs((comment.Date - DateTime.Now).Value.Hours)) <span>hours ago</span>
                                    }
                                    else if (Math.Abs((comment.Date - DateTime.Now).Value.TotalDays) < 365)
                                    {
                                        @(Math.Abs((comment.Date - DateTime.Now).Value.Days)) <span>days ago</span>
                                    }
                                    else
                                    {
                                        @((int)(Math.Abs((comment.Date - DateTime.Now).Value.Days) / 365)) <span>years ago</span>
                                    }
                                }

                            </span>
                        </div>
                        <div class="comment-posting-text font-14">
                            @comment.Content
                        </div>
                    </div>

                                        }
                                    }
        }
    </div>
</div>
